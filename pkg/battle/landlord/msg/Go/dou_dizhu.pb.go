// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dou_dizhu.proto

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 客户端到服务器发送消息的类型
type ReceiveMessageType int32

const (
	ReceiveMessageType_C2SStartID     ReceiveMessageType = 0
	ReceiveMessageType_C2SRob         ReceiveMessageType = 1
	ReceiveMessageType_C2SRedouble    ReceiveMessageType = 2
	ReceiveMessageType_C2STips        ReceiveMessageType = 3
	ReceiveMessageType_C2SPutCards    ReceiveMessageType = 4
	ReceiveMessageType_C2SHangUp      ReceiveMessageType = 5
	ReceiveMessageType_C2SDemandCards ReceiveMessageType = 6
	ReceiveMessageType_C2SClean       ReceiveMessageType = 7
)

var ReceiveMessageType_name = map[int32]string{
	0: "C2SStartID",
	1: "C2SRob",
	2: "C2SRedouble",
	3: "C2STips",
	4: "C2SPutCards",
	5: "C2SHangUp",
	6: "C2SDemandCards",
	7: "C2SClean",
}
var ReceiveMessageType_value = map[string]int32{
	"C2SStartID":     0,
	"C2SRob":         1,
	"C2SRedouble":    2,
	"C2STips":        3,
	"C2SPutCards":    4,
	"C2SHangUp":      5,
	"C2SDemandCards": 6,
	"C2SClean":       7,
}

func (x ReceiveMessageType) String() string {
	return proto.EnumName(ReceiveMessageType_name, int32(x))
}
func (ReceiveMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{0}
}

// 服务器发送给客户端的消息类型
type SendToClientMessageType int32

const (
	SendToClientMessageType_S2CStartID        SendToClientMessageType = 0
	SendToClientMessageType_S2CGameStatus     SendToClientMessageType = 1
	SendToClientMessageType_S2CSceneMessage   SendToClientMessageType = 2
	SendToClientMessageType_S2CDeal           SendToClientMessageType = 3
	SendToClientMessageType_S2CCurrentRobber  SendToClientMessageType = 4
	SendToClientMessageType_S2CRobResult      SendToClientMessageType = 5
	SendToClientMessageType_S2CConfirmDizhu   SendToClientMessageType = 6
	SendToClientMessageType_S2CRedoubleResult SendToClientMessageType = 7
	SendToClientMessageType_S2CCurrentPlayer  SendToClientMessageType = 8
	SendToClientMessageType_S2CTips           SendToClientMessageType = 9
	SendToClientMessageType_S2CHangUpInfo     SendToClientMessageType = 10
	SendToClientMessageType_S2CPutInfo        SendToClientMessageType = 11
	SendToClientMessageType_S2CSettleInfo     SendToClientMessageType = 12
)

var SendToClientMessageType_name = map[int32]string{
	0:  "S2CStartID",
	1:  "S2CGameStatus",
	2:  "S2CSceneMessage",
	3:  "S2CDeal",
	4:  "S2CCurrentRobber",
	5:  "S2CRobResult",
	6:  "S2CConfirmDizhu",
	7:  "S2CRedoubleResult",
	8:  "S2CCurrentPlayer",
	9:  "S2CTips",
	10: "S2CHangUpInfo",
	11: "S2CPutInfo",
	12: "S2CSettleInfo",
}
var SendToClientMessageType_value = map[string]int32{
	"S2CStartID":        0,
	"S2CGameStatus":     1,
	"S2CSceneMessage":   2,
	"S2CDeal":           3,
	"S2CCurrentRobber":  4,
	"S2CRobResult":      5,
	"S2CConfirmDizhu":   6,
	"S2CRedoubleResult": 7,
	"S2CCurrentPlayer":  8,
	"S2CTips":           9,
	"S2CHangUpInfo":     10,
	"S2CPutInfo":        11,
	"S2CSettleInfo":     12,
}

func (x SendToClientMessageType) String() string {
	return proto.EnumName(SendToClientMessageType_name, int32(x))
}
func (SendToClientMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{1}
}

// 用户状态
type UserStatus int32

const (
	UserStatus_UserInitStatus UserStatus = 0
	UserStatus_UserNormal     UserStatus = 1
	UserStatus_UserHangUp     UserStatus = 2
)

var UserStatus_name = map[int32]string{
	0: "UserInitStatus",
	1: "UserNormal",
	2: "UserHangUp",
}
var UserStatus_value = map[string]int32{
	"UserInitStatus": 0,
	"UserNormal":     1,
	"UserHangUp":     2,
}

func (x UserStatus) String() string {
	return proto.EnumName(UserStatus_name, int32(x))
}
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{2}
}

// 错误列表
type ErrList int32

const (
	ErrList_InitErr      ErrList = 0
	ErrList_TimeOut      ErrList = 1
	ErrList_WrongfulType ErrList = 2
	ErrList_NotGreater   ErrList = 3
)

var ErrList_name = map[int32]string{
	0: "InitErr",
	1: "TimeOut",
	2: "WrongfulType",
	3: "NotGreater",
}
var ErrList_value = map[string]int32{
	"InitErr":      0,
	"TimeOut":      1,
	"WrongfulType": 2,
	"NotGreater":   3,
}

func (x ErrList) String() string {
	return proto.EnumName(ErrList_name, int32(x))
}
func (ErrList) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{3}
}

// 游戏阶段
type GameStatus int32

const (
	GameStatus_GameInitStatus     GameStatus = 0
	GameStatus_ReadyStatus        GameStatus = 1
	GameStatus_DealStatus         GameStatus = 2
	GameStatus_RobStatus          GameStatus = 3
	GameStatus_confirmDizhuStatus GameStatus = 4
	GameStatus_RedoubleStatus     GameStatus = 5
	GameStatus_PutCardStatus      GameStatus = 6
	GameStatus_SettleStatus       GameStatus = 7
	GameStatus_GameOver           GameStatus = 8
)

var GameStatus_name = map[int32]string{
	0: "GameInitStatus",
	1: "ReadyStatus",
	2: "DealStatus",
	3: "RobStatus",
	4: "confirmDizhuStatus",
	5: "RedoubleStatus",
	6: "PutCardStatus",
	7: "SettleStatus",
	8: "GameOver",
}
var GameStatus_value = map[string]int32{
	"GameInitStatus":     0,
	"ReadyStatus":        1,
	"DealStatus":         2,
	"RobStatus":          3,
	"confirmDizhuStatus": 4,
	"RedoubleStatus":     5,
	"PutCardStatus":      6,
	"SettleStatus":       7,
	"GameOver":           8,
}

func (x GameStatus) String() string {
	return proto.EnumName(GameStatus_name, int32(x))
}
func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{4}
}

// 牌的类型
type CardsType int32

const (
	CardsType_Normal                CardsType = 0
	CardsType_SingleCard            CardsType = 1
	CardsType_Pair                  CardsType = 2
	CardsType_Triplet               CardsType = 3
	CardsType_TripletWithSingle     CardsType = 4
	CardsType_TripletWithPair       CardsType = 5
	CardsType_Sequence              CardsType = 6
	CardsType_SerialPair            CardsType = 7
	CardsType_SerialTriplet         CardsType = 8
	CardsType_SerialTripletWithOne  CardsType = 9
	CardsType_SerialTripletWithWing CardsType = 10
	CardsType_QuartetWithTwo        CardsType = 11
	CardsType_QuartetWithTwoPair    CardsType = 12
	CardsType_Bomb                  CardsType = 13
	CardsType_Rocket                CardsType = 14
)

var CardsType_name = map[int32]string{
	0:  "Normal",
	1:  "SingleCard",
	2:  "Pair",
	3:  "Triplet",
	4:  "TripletWithSingle",
	5:  "TripletWithPair",
	6:  "Sequence",
	7:  "SerialPair",
	8:  "SerialTriplet",
	9:  "SerialTripletWithOne",
	10: "SerialTripletWithWing",
	11: "QuartetWithTwo",
	12: "QuartetWithTwoPair",
	13: "Bomb",
	14: "Rocket",
}
var CardsType_value = map[string]int32{
	"Normal":                0,
	"SingleCard":            1,
	"Pair":                  2,
	"Triplet":               3,
	"TripletWithSingle":     4,
	"TripletWithPair":       5,
	"Sequence":              6,
	"SerialPair":            7,
	"SerialTriplet":         8,
	"SerialTripletWithOne":  9,
	"SerialTripletWithWing": 10,
	"QuartetWithTwo":        11,
	"QuartetWithTwoPair":    12,
	"Bomb":                  13,
	"Rocket":                14,
}

func (x CardsType) String() string {
	return proto.EnumName(CardsType_name, int32(x))
}
func (CardsType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{5}
}

// 打牌操作类型
type UserActionType int32

const (
	UserActionType_NoPermission UserActionType = 0
	UserActionType_PutCard      UserActionType = 1
	UserActionType_TakeOverCard UserActionType = 2
)

var UserActionType_name = map[int32]string{
	0: "NoPermission",
	1: "PutCard",
	2: "TakeOverCard",
}
var UserActionType_value = map[string]int32{
	"NoPermission": 0,
	"PutCard":      1,
	"TakeOverCard": 2,
}

func (x UserActionType) String() string {
	return proto.EnumName(UserActionType_name, int32(x))
}
func (UserActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{6}
}

// 游戏状态消息
type StatusMessageRes struct {
	Status               int32    `protobuf:"varint,1,opt,name=Status" json:"Status,omitempty"`
	StatusTime           int32    `protobuf:"varint,2,opt,name=StatusTime" json:"StatusTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusMessageRes) Reset()         { *m = StatusMessageRes{} }
func (m *StatusMessageRes) String() string { return proto.CompactTextString(m) }
func (*StatusMessageRes) ProtoMessage()    {}
func (*StatusMessageRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{0}
}
func (m *StatusMessageRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusMessageRes.Unmarshal(m, b)
}
func (m *StatusMessageRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusMessageRes.Marshal(b, m, deterministic)
}
func (dst *StatusMessageRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusMessageRes.Merge(dst, src)
}
func (m *StatusMessageRes) XXX_Size() int {
	return xxx_messageInfo_StatusMessageRes.Size(m)
}
func (m *StatusMessageRes) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusMessageRes.DiscardUnknown(m)
}

var xxx_messageInfo_StatusMessageRes proto.InternalMessageInfo

func (m *StatusMessageRes) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *StatusMessageRes) GetStatusTime() int32 {
	if m != nil {
		return m.StatusTime
	}
	return 0
}

// 发牌消息
type DealRes struct {
	Cards                []byte   `protobuf:"bytes,1,opt,name=Cards,proto3" json:"Cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DealRes) Reset()         { *m = DealRes{} }
func (m *DealRes) String() string { return proto.CompactTextString(m) }
func (*DealRes) ProtoMessage()    {}
func (*DealRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{1}
}
func (m *DealRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DealRes.Unmarshal(m, b)
}
func (m *DealRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DealRes.Marshal(b, m, deterministic)
}
func (dst *DealRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DealRes.Merge(dst, src)
}
func (m *DealRes) XXX_Size() int {
	return xxx_messageInfo_DealRes.Size(m)
}
func (m *DealRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DealRes.DiscardUnknown(m)
}

var xxx_messageInfo_DealRes proto.InternalMessageInfo

func (m *DealRes) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 广播当前抢地主玩家
type CurrentRobberRes struct {
	UserId               int64    `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	ChairId              int32    `protobuf:"varint,2,opt,name=ChairId" json:"ChairId,omitempty"`
	ActionTime           int32    `protobuf:"varint,3,opt,name=ActionTime" json:"ActionTime,omitempty"`
	CurrentNum           int64    `protobuf:"varint,4,opt,name=CurrentNum" json:"CurrentNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrentRobberRes) Reset()         { *m = CurrentRobberRes{} }
func (m *CurrentRobberRes) String() string { return proto.CompactTextString(m) }
func (*CurrentRobberRes) ProtoMessage()    {}
func (*CurrentRobberRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{2}
}
func (m *CurrentRobberRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrentRobberRes.Unmarshal(m, b)
}
func (m *CurrentRobberRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrentRobberRes.Marshal(b, m, deterministic)
}
func (dst *CurrentRobberRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentRobberRes.Merge(dst, src)
}
func (m *CurrentRobberRes) XXX_Size() int {
	return xxx_messageInfo_CurrentRobberRes.Size(m)
}
func (m *CurrentRobberRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentRobberRes.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentRobberRes proto.InternalMessageInfo

func (m *CurrentRobberRes) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CurrentRobberRes) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *CurrentRobberRes) GetActionTime() int32 {
	if m != nil {
		return m.ActionTime
	}
	return 0
}

func (m *CurrentRobberRes) GetCurrentNum() int64 {
	if m != nil {
		return m.CurrentNum
	}
	return 0
}

// 广播抢地主请求响应
type RobResultRes struct {
	UserId               int64    `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	ChairId              int32    `protobuf:"varint,2,opt,name=ChairId" json:"ChairId,omitempty"`
	RobNum               int64    `protobuf:"varint,3,opt,name=RobNum" json:"RobNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobResultRes) Reset()         { *m = RobResultRes{} }
func (m *RobResultRes) String() string { return proto.CompactTextString(m) }
func (*RobResultRes) ProtoMessage()    {}
func (*RobResultRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{3}
}
func (m *RobResultRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobResultRes.Unmarshal(m, b)
}
func (m *RobResultRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobResultRes.Marshal(b, m, deterministic)
}
func (dst *RobResultRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobResultRes.Merge(dst, src)
}
func (m *RobResultRes) XXX_Size() int {
	return xxx_messageInfo_RobResultRes.Size(m)
}
func (m *RobResultRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RobResultRes.DiscardUnknown(m)
}

var xxx_messageInfo_RobResultRes proto.InternalMessageInfo

func (m *RobResultRes) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RobResultRes) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *RobResultRes) GetRobNum() int64 {
	if m != nil {
		return m.RobNum
	}
	return 0
}

// 广播确认地主消息
type ConfirmDizhuRes struct {
	UserId               int64    `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	ChairId              int32    `protobuf:"varint,2,opt,name=ChairId" json:"ChairId,omitempty"`
	BottomCards          []byte   `protobuf:"bytes,3,opt,name=BottomCards,proto3" json:"BottomCards,omitempty"`
	RobNum               int64    `protobuf:"varint,4,opt,name=RobNum" json:"RobNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmDizhuRes) Reset()         { *m = ConfirmDizhuRes{} }
func (m *ConfirmDizhuRes) String() string { return proto.CompactTextString(m) }
func (*ConfirmDizhuRes) ProtoMessage()    {}
func (*ConfirmDizhuRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{4}
}
func (m *ConfirmDizhuRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmDizhuRes.Unmarshal(m, b)
}
func (m *ConfirmDizhuRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmDizhuRes.Marshal(b, m, deterministic)
}
func (dst *ConfirmDizhuRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmDizhuRes.Merge(dst, src)
}
func (m *ConfirmDizhuRes) XXX_Size() int {
	return xxx_messageInfo_ConfirmDizhuRes.Size(m)
}
func (m *ConfirmDizhuRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmDizhuRes.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmDizhuRes proto.InternalMessageInfo

func (m *ConfirmDizhuRes) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ConfirmDizhuRes) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *ConfirmDizhuRes) GetBottomCards() []byte {
	if m != nil {
		return m.BottomCards
	}
	return nil
}

func (m *ConfirmDizhuRes) GetRobNum() int64 {
	if m != nil {
		return m.RobNum
	}
	return 0
}

// 广播加倍结果
type RedoubleResultRes struct {
	UserId               int64    `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	ChairId              int32    `protobuf:"varint,2,opt,name=ChairId" json:"ChairId,omitempty"`
	AddNum               int64    `protobuf:"varint,3,opt,name=AddNum" json:"AddNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedoubleResultRes) Reset()         { *m = RedoubleResultRes{} }
func (m *RedoubleResultRes) String() string { return proto.CompactTextString(m) }
func (*RedoubleResultRes) ProtoMessage()    {}
func (*RedoubleResultRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{5}
}
func (m *RedoubleResultRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedoubleResultRes.Unmarshal(m, b)
}
func (m *RedoubleResultRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedoubleResultRes.Marshal(b, m, deterministic)
}
func (dst *RedoubleResultRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedoubleResultRes.Merge(dst, src)
}
func (m *RedoubleResultRes) XXX_Size() int {
	return xxx_messageInfo_RedoubleResultRes.Size(m)
}
func (m *RedoubleResultRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RedoubleResultRes.DiscardUnknown(m)
}

var xxx_messageInfo_RedoubleResultRes proto.InternalMessageInfo

func (m *RedoubleResultRes) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RedoubleResultRes) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *RedoubleResultRes) GetAddNum() int64 {
	if m != nil {
		return m.AddNum
	}
	return 0
}

// 广播当前操作玩家
type CurrentPlayerRes struct {
	UserId               int64    `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	ChairId              int32    `protobuf:"varint,2,opt,name=ChairId" json:"ChairId,omitempty"`
	ActionTime           int32    `protobuf:"varint,3,opt,name=ActionTime" json:"ActionTime,omitempty"`
	Permission           bool     `protobuf:"varint,4,opt,name=Permission" json:"Permission,omitempty"`
	ActionType           int32    `protobuf:"varint,5,opt,name=ActionType" json:"ActionType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrentPlayerRes) Reset()         { *m = CurrentPlayerRes{} }
func (m *CurrentPlayerRes) String() string { return proto.CompactTextString(m) }
func (*CurrentPlayerRes) ProtoMessage()    {}
func (*CurrentPlayerRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{6}
}
func (m *CurrentPlayerRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrentPlayerRes.Unmarshal(m, b)
}
func (m *CurrentPlayerRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrentPlayerRes.Marshal(b, m, deterministic)
}
func (dst *CurrentPlayerRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentPlayerRes.Merge(dst, src)
}
func (m *CurrentPlayerRes) XXX_Size() int {
	return xxx_messageInfo_CurrentPlayerRes.Size(m)
}
func (m *CurrentPlayerRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentPlayerRes.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentPlayerRes proto.InternalMessageInfo

func (m *CurrentPlayerRes) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CurrentPlayerRes) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *CurrentPlayerRes) GetActionTime() int32 {
	if m != nil {
		return m.ActionTime
	}
	return 0
}

func (m *CurrentPlayerRes) GetPermission() bool {
	if m != nil {
		return m.Permission
	}
	return false
}

func (m *CurrentPlayerRes) GetActionType() int32 {
	if m != nil {
		return m.ActionType
	}
	return 0
}

// 通知提示信息
type TipsRes struct {
	Cards                [][]byte `protobuf:"bytes,1,rep,name=Cards,proto3" json:"Cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TipsRes) Reset()         { *m = TipsRes{} }
func (m *TipsRes) String() string { return proto.CompactTextString(m) }
func (*TipsRes) ProtoMessage()    {}
func (*TipsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{7}
}
func (m *TipsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TipsRes.Unmarshal(m, b)
}
func (m *TipsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TipsRes.Marshal(b, m, deterministic)
}
func (dst *TipsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TipsRes.Merge(dst, src)
}
func (m *TipsRes) XXX_Size() int {
	return xxx_messageInfo_TipsRes.Size(m)
}
func (m *TipsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TipsRes.DiscardUnknown(m)
}

var xxx_messageInfo_TipsRes proto.InternalMessageInfo

func (m *TipsRes) GetCards() [][]byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 广播玩家托管操作信息
type HangUpInfoRes struct {
	UserId               int64    `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	ChairId              int32    `protobuf:"varint,2,opt,name=ChairId" json:"ChairId,omitempty"`
	IsHangUp             bool     `protobuf:"varint,3,opt,name=IsHangUp" json:"IsHangUp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HangUpInfoRes) Reset()         { *m = HangUpInfoRes{} }
func (m *HangUpInfoRes) String() string { return proto.CompactTextString(m) }
func (*HangUpInfoRes) ProtoMessage()    {}
func (*HangUpInfoRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{8}
}
func (m *HangUpInfoRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HangUpInfoRes.Unmarshal(m, b)
}
func (m *HangUpInfoRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HangUpInfoRes.Marshal(b, m, deterministic)
}
func (dst *HangUpInfoRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HangUpInfoRes.Merge(dst, src)
}
func (m *HangUpInfoRes) XXX_Size() int {
	return xxx_messageInfo_HangUpInfoRes.Size(m)
}
func (m *HangUpInfoRes) XXX_DiscardUnknown() {
	xxx_messageInfo_HangUpInfoRes.DiscardUnknown(m)
}

var xxx_messageInfo_HangUpInfoRes proto.InternalMessageInfo

func (m *HangUpInfoRes) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *HangUpInfoRes) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *HangUpInfoRes) GetIsHangUp() bool {
	if m != nil {
		return m.IsHangUp
	}
	return false
}

// 广播出牌请求结果
type PutInfoRes struct {
	ErrNum               int32       `protobuf:"varint,1,opt,name=ErrNum" json:"ErrNum,omitempty"`
	IsSuccess            bool        `protobuf:"varint,2,opt,name=IsSuccess" json:"IsSuccess,omitempty"`
	UserId               int64       `protobuf:"varint,3,opt,name=UserId" json:"UserId,omitempty"`
	ChairId              int32       `protobuf:"varint,4,opt,name=ChairId" json:"ChairId,omitempty"`
	Cards                []byte      `protobuf:"bytes,5,opt,name=Cards,proto3" json:"Cards,omitempty"`
	CardType             int32       `protobuf:"varint,6,opt,name=CardType" json:"CardType,omitempty"`
	BoomToPlayer         *PlayerInfo `protobuf:"bytes,7,opt,name=BoomToPlayer" json:"BoomToPlayer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PutInfoRes) Reset()         { *m = PutInfoRes{} }
func (m *PutInfoRes) String() string { return proto.CompactTextString(m) }
func (*PutInfoRes) ProtoMessage()    {}
func (*PutInfoRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{9}
}
func (m *PutInfoRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutInfoRes.Unmarshal(m, b)
}
func (m *PutInfoRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutInfoRes.Marshal(b, m, deterministic)
}
func (dst *PutInfoRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutInfoRes.Merge(dst, src)
}
func (m *PutInfoRes) XXX_Size() int {
	return xxx_messageInfo_PutInfoRes.Size(m)
}
func (m *PutInfoRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PutInfoRes.DiscardUnknown(m)
}

var xxx_messageInfo_PutInfoRes proto.InternalMessageInfo

func (m *PutInfoRes) GetErrNum() int32 {
	if m != nil {
		return m.ErrNum
	}
	return 0
}

func (m *PutInfoRes) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *PutInfoRes) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PutInfoRes) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *PutInfoRes) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *PutInfoRes) GetCardType() int32 {
	if m != nil {
		return m.CardType
	}
	return 0
}

func (m *PutInfoRes) GetBoomToPlayer() *PlayerInfo {
	if m != nil {
		return m.BoomToPlayer
	}
	return nil
}

// 用户信息
type PlayerInfo struct {
	UserId               int64    `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	ChairId              int32    `protobuf:"varint,2,opt,name=ChairId" json:"ChairId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerInfo) Reset()         { *m = PlayerInfo{} }
func (m *PlayerInfo) String() string { return proto.CompactTextString(m) }
func (*PlayerInfo) ProtoMessage()    {}
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{10}
}
func (m *PlayerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerInfo.Unmarshal(m, b)
}
func (m *PlayerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerInfo.Marshal(b, m, deterministic)
}
func (dst *PlayerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerInfo.Merge(dst, src)
}
func (m *PlayerInfo) XXX_Size() int {
	return xxx_messageInfo_PlayerInfo.Size(m)
}
func (m *PlayerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerInfo proto.InternalMessageInfo

func (m *PlayerInfo) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PlayerInfo) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

// 广播结算信息
type SettleInfoRes struct {
	RobMultiple          int64           `protobuf:"varint,1,opt,name=RobMultiple" json:"RobMultiple,omitempty"`
	AllOffMultiple       int64           `protobuf:"varint,2,opt,name=AllOffMultiple" json:"AllOffMultiple,omitempty"`
	BeAllOffMultiple     int64           `protobuf:"varint,3,opt,name=BeAllOffMultiple" json:"BeAllOffMultiple,omitempty"`
	BottomMultiple       int64           `protobuf:"varint,4,opt,name=BottomMultiple" json:"BottomMultiple,omitempty"`
	BoomMultiple         int64           `protobuf:"varint,5,opt,name=BoomMultiple" json:"BoomMultiple,omitempty"`
	RocketMultiple       int64           `protobuf:"varint,6,opt,name=RocketMultiple" json:"RocketMultiple,omitempty"`
	CommonMultiple       int64           `protobuf:"varint,7,opt,name=CommonMultiple" json:"CommonMultiple,omitempty"`
	DizhuMultiple        int64           `protobuf:"varint,8,opt,name=DizhuMultiple" json:"DizhuMultiple,omitempty"`
	ResultList           []*SettleResult `protobuf:"bytes,9,rep,name=ResultList" json:"ResultList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SettleInfoRes) Reset()         { *m = SettleInfoRes{} }
func (m *SettleInfoRes) String() string { return proto.CompactTextString(m) }
func (*SettleInfoRes) ProtoMessage()    {}
func (*SettleInfoRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{11}
}
func (m *SettleInfoRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleInfoRes.Unmarshal(m, b)
}
func (m *SettleInfoRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleInfoRes.Marshal(b, m, deterministic)
}
func (dst *SettleInfoRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleInfoRes.Merge(dst, src)
}
func (m *SettleInfoRes) XXX_Size() int {
	return xxx_messageInfo_SettleInfoRes.Size(m)
}
func (m *SettleInfoRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleInfoRes.DiscardUnknown(m)
}

var xxx_messageInfo_SettleInfoRes proto.InternalMessageInfo

func (m *SettleInfoRes) GetRobMultiple() int64 {
	if m != nil {
		return m.RobMultiple
	}
	return 0
}

func (m *SettleInfoRes) GetAllOffMultiple() int64 {
	if m != nil {
		return m.AllOffMultiple
	}
	return 0
}

func (m *SettleInfoRes) GetBeAllOffMultiple() int64 {
	if m != nil {
		return m.BeAllOffMultiple
	}
	return 0
}

func (m *SettleInfoRes) GetBottomMultiple() int64 {
	if m != nil {
		return m.BottomMultiple
	}
	return 0
}

func (m *SettleInfoRes) GetBoomMultiple() int64 {
	if m != nil {
		return m.BoomMultiple
	}
	return 0
}

func (m *SettleInfoRes) GetRocketMultiple() int64 {
	if m != nil {
		return m.RocketMultiple
	}
	return 0
}

func (m *SettleInfoRes) GetCommonMultiple() int64 {
	if m != nil {
		return m.CommonMultiple
	}
	return 0
}

func (m *SettleInfoRes) GetDizhuMultiple() int64 {
	if m != nil {
		return m.DizhuMultiple
	}
	return 0
}

func (m *SettleInfoRes) GetResultList() []*SettleResult {
	if m != nil {
		return m.ResultList
	}
	return nil
}

// 结算结果
type SettleResult struct {
	UserId               int64    `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	ChairId              int32    `protobuf:"varint,2,opt,name=ChairId" json:"ChairId,omitempty"`
	IsDizhu              bool     `protobuf:"varint,3,opt,name=IsDizhu" json:"IsDizhu,omitempty"`
	Result               int64    `protobuf:"varint,4,opt,name=Result" json:"Result,omitempty"`
	PeasantsMultiple     int64    `protobuf:"varint,5,opt,name=PeasantsMultiple" json:"PeasantsMultiple,omitempty"`
	TotalMultiple        int64    `protobuf:"varint,6,opt,name=TotalMultiple" json:"TotalMultiple,omitempty"`
	LeftCards            []byte   `protobuf:"bytes,7,opt,name=LeftCards,proto3" json:"LeftCards,omitempty"`
	UserName             string   `protobuf:"bytes,8,opt,name=UserName" json:"UserName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettleResult) Reset()         { *m = SettleResult{} }
func (m *SettleResult) String() string { return proto.CompactTextString(m) }
func (*SettleResult) ProtoMessage()    {}
func (*SettleResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{12}
}
func (m *SettleResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleResult.Unmarshal(m, b)
}
func (m *SettleResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleResult.Marshal(b, m, deterministic)
}
func (dst *SettleResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleResult.Merge(dst, src)
}
func (m *SettleResult) XXX_Size() int {
	return xxx_messageInfo_SettleResult.Size(m)
}
func (m *SettleResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleResult.DiscardUnknown(m)
}

var xxx_messageInfo_SettleResult proto.InternalMessageInfo

func (m *SettleResult) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *SettleResult) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *SettleResult) GetIsDizhu() bool {
	if m != nil {
		return m.IsDizhu
	}
	return false
}

func (m *SettleResult) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *SettleResult) GetPeasantsMultiple() int64 {
	if m != nil {
		return m.PeasantsMultiple
	}
	return 0
}

func (m *SettleResult) GetTotalMultiple() int64 {
	if m != nil {
		return m.TotalMultiple
	}
	return 0
}

func (m *SettleResult) GetLeftCards() []byte {
	if m != nil {
		return m.LeftCards
	}
	return nil
}

func (m *SettleResult) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

// 场景消息
type SceneMessageRes struct {
	GameStatus           int32              `protobuf:"varint,1,opt,name=GameStatus" json:"GameStatus,omitempty"`
	StatusTimeLeft       int64              `protobuf:"varint,2,opt,name=StatusTimeLeft" json:"StatusTimeLeft,omitempty"`
	RoomCost             int64              `protobuf:"varint,3,opt,name=RoomCost" json:"RoomCost,omitempty"`
	MinLimit             int64              `protobuf:"varint,4,opt,name=MinLimit" json:"MinLimit,omitempty"`
	Reconnect            bool               `protobuf:"varint,5,opt,name=Reconnect" json:"Reconnect,omitempty"`
	RoomID               int64              `protobuf:"varint,6,opt,name=RoomID" json:"RoomID,omitempty"`
	RoomLevel            int32              `protobuf:"varint,7,opt,name=RoomLevel" json:"RoomLevel,omitempty"`
	BottomCards          []byte             `protobuf:"bytes,8,opt,name=BottomCards,proto3" json:"BottomCards,omitempty"`
	CommonMultiple       int64              `protobuf:"varint,9,opt,name=CommonMultiple" json:"CommonMultiple,omitempty"`
	CurrentRobber        *CurrentRobberRes  `protobuf:"bytes,10,opt,name=CurrentRobber" json:"CurrentRobber,omitempty"`
	CurrentPlayer        *CurrentPlayerRes  `protobuf:"bytes,11,opt,name=CurrentPlayer" json:"CurrentPlayer,omitempty"`
	UserData             []*SeatUserInfoRes `protobuf:"bytes,12,rep,name=UserData" json:"UserData,omitempty"`
	LeftCards            []*LeftCards       `protobuf:"bytes,13,rep,name=LeftCards" json:"LeftCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SceneMessageRes) Reset()         { *m = SceneMessageRes{} }
func (m *SceneMessageRes) String() string { return proto.CompactTextString(m) }
func (*SceneMessageRes) ProtoMessage()    {}
func (*SceneMessageRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{13}
}
func (m *SceneMessageRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SceneMessageRes.Unmarshal(m, b)
}
func (m *SceneMessageRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SceneMessageRes.Marshal(b, m, deterministic)
}
func (dst *SceneMessageRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SceneMessageRes.Merge(dst, src)
}
func (m *SceneMessageRes) XXX_Size() int {
	return xxx_messageInfo_SceneMessageRes.Size(m)
}
func (m *SceneMessageRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SceneMessageRes.DiscardUnknown(m)
}

var xxx_messageInfo_SceneMessageRes proto.InternalMessageInfo

func (m *SceneMessageRes) GetGameStatus() int32 {
	if m != nil {
		return m.GameStatus
	}
	return 0
}

func (m *SceneMessageRes) GetStatusTimeLeft() int64 {
	if m != nil {
		return m.StatusTimeLeft
	}
	return 0
}

func (m *SceneMessageRes) GetRoomCost() int64 {
	if m != nil {
		return m.RoomCost
	}
	return 0
}

func (m *SceneMessageRes) GetMinLimit() int64 {
	if m != nil {
		return m.MinLimit
	}
	return 0
}

func (m *SceneMessageRes) GetReconnect() bool {
	if m != nil {
		return m.Reconnect
	}
	return false
}

func (m *SceneMessageRes) GetRoomID() int64 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *SceneMessageRes) GetRoomLevel() int32 {
	if m != nil {
		return m.RoomLevel
	}
	return 0
}

func (m *SceneMessageRes) GetBottomCards() []byte {
	if m != nil {
		return m.BottomCards
	}
	return nil
}

func (m *SceneMessageRes) GetCommonMultiple() int64 {
	if m != nil {
		return m.CommonMultiple
	}
	return 0
}

func (m *SceneMessageRes) GetCurrentRobber() *CurrentRobberRes {
	if m != nil {
		return m.CurrentRobber
	}
	return nil
}

func (m *SceneMessageRes) GetCurrentPlayer() *CurrentPlayerRes {
	if m != nil {
		return m.CurrentPlayer
	}
	return nil
}

func (m *SceneMessageRes) GetUserData() []*SeatUserInfoRes {
	if m != nil {
		return m.UserData
	}
	return nil
}

func (m *SceneMessageRes) GetLeftCards() []*LeftCards {
	if m != nil {
		return m.LeftCards
	}
	return nil
}

// 游戏中玩家的数据
type SeatUserInfoRes struct {
	UserName             string   `protobuf:"bytes,1,opt,name=UserName" json:"UserName,omitempty"`
	Head                 string   `protobuf:"bytes,2,opt,name=Head" json:"Head,omitempty"`
	Coin                 int64    `protobuf:"varint,3,opt,name=Coin" json:"Coin,omitempty"`
	ChairId              int32    `protobuf:"varint,4,opt,name=ChairId" json:"ChairId,omitempty"`
	Cards                []byte   `protobuf:"bytes,5,opt,name=Cards,proto3" json:"Cards,omitempty"`
	Status               int32    `protobuf:"varint,6,opt,name=Status" json:"Status,omitempty"`
	UserId               int64    `protobuf:"varint,7,opt,name=UserId" json:"UserId,omitempty"`
	Address              string   `protobuf:"bytes,8,opt,name=Address" json:"Address,omitempty"`
	LastCards            []byte   `protobuf:"bytes,9,opt,name=LastCards,proto3" json:"LastCards,omitempty"`
	Sex                  int32    `protobuf:"varint,10,opt,name=Sex" json:"Sex,omitempty"`
	IsDizhu              bool     `protobuf:"varint,11,opt,name=IsDizhu" json:"IsDizhu,omitempty"`
	RobNum               int64    `protobuf:"varint,12,opt,name=RobNum" json:"RobNum,omitempty"`
	AddNum               int64    `protobuf:"varint,13,opt,name=AddNum" json:"AddNum,omitempty"`
	CardsLen             int64    `protobuf:"varint,14,opt,name=CardsLen" json:"CardsLen,omitempty"`
	IsActioned           bool     `protobuf:"varint,15,opt,name=IsActioned" json:"IsActioned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeatUserInfoRes) Reset()         { *m = SeatUserInfoRes{} }
func (m *SeatUserInfoRes) String() string { return proto.CompactTextString(m) }
func (*SeatUserInfoRes) ProtoMessage()    {}
func (*SeatUserInfoRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{14}
}
func (m *SeatUserInfoRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeatUserInfoRes.Unmarshal(m, b)
}
func (m *SeatUserInfoRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeatUserInfoRes.Marshal(b, m, deterministic)
}
func (dst *SeatUserInfoRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeatUserInfoRes.Merge(dst, src)
}
func (m *SeatUserInfoRes) XXX_Size() int {
	return xxx_messageInfo_SeatUserInfoRes.Size(m)
}
func (m *SeatUserInfoRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SeatUserInfoRes.DiscardUnknown(m)
}

var xxx_messageInfo_SeatUserInfoRes proto.InternalMessageInfo

func (m *SeatUserInfoRes) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *SeatUserInfoRes) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *SeatUserInfoRes) GetCoin() int64 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *SeatUserInfoRes) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *SeatUserInfoRes) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *SeatUserInfoRes) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SeatUserInfoRes) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *SeatUserInfoRes) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SeatUserInfoRes) GetLastCards() []byte {
	if m != nil {
		return m.LastCards
	}
	return nil
}

func (m *SeatUserInfoRes) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *SeatUserInfoRes) GetIsDizhu() bool {
	if m != nil {
		return m.IsDizhu
	}
	return false
}

func (m *SeatUserInfoRes) GetRobNum() int64 {
	if m != nil {
		return m.RobNum
	}
	return 0
}

func (m *SeatUserInfoRes) GetAddNum() int64 {
	if m != nil {
		return m.AddNum
	}
	return 0
}

func (m *SeatUserInfoRes) GetCardsLen() int64 {
	if m != nil {
		return m.CardsLen
	}
	return 0
}

func (m *SeatUserInfoRes) GetIsActioned() bool {
	if m != nil {
		return m.IsActioned
	}
	return false
}

// 记牌器剩余牌
type LeftCards struct {
	Count                int32    `protobuf:"varint,1,opt,name=Count" json:"Count,omitempty"`
	CardValue            []byte   `protobuf:"bytes,2,opt,name=CardValue,proto3" json:"CardValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeftCards) Reset()         { *m = LeftCards{} }
func (m *LeftCards) String() string { return proto.CompactTextString(m) }
func (*LeftCards) ProtoMessage()    {}
func (*LeftCards) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{15}
}
func (m *LeftCards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeftCards.Unmarshal(m, b)
}
func (m *LeftCards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeftCards.Marshal(b, m, deterministic)
}
func (dst *LeftCards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeftCards.Merge(dst, src)
}
func (m *LeftCards) XXX_Size() int {
	return xxx_messageInfo_LeftCards.Size(m)
}
func (m *LeftCards) XXX_DiscardUnknown() {
	xxx_messageInfo_LeftCards.DiscardUnknown(m)
}

var xxx_messageInfo_LeftCards proto.InternalMessageInfo

func (m *LeftCards) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *LeftCards) GetCardValue() []byte {
	if m != nil {
		return m.CardValue
	}
	return nil
}

// 抢地主请求
type RobReq struct {
	RobNum               int64    `protobuf:"varint,1,opt,name=RobNum" json:"RobNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobReq) Reset()         { *m = RobReq{} }
func (m *RobReq) String() string { return proto.CompactTextString(m) }
func (*RobReq) ProtoMessage()    {}
func (*RobReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{16}
}
func (m *RobReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobReq.Unmarshal(m, b)
}
func (m *RobReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobReq.Marshal(b, m, deterministic)
}
func (dst *RobReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobReq.Merge(dst, src)
}
func (m *RobReq) XXX_Size() int {
	return xxx_messageInfo_RobReq.Size(m)
}
func (m *RobReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RobReq.DiscardUnknown(m)
}

var xxx_messageInfo_RobReq proto.InternalMessageInfo

func (m *RobReq) GetRobNum() int64 {
	if m != nil {
		return m.RobNum
	}
	return 0
}

// 加倍请求
type RedoubleReq struct {
	AddNum               int64    `protobuf:"varint,1,opt,name=AddNum" json:"AddNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedoubleReq) Reset()         { *m = RedoubleReq{} }
func (m *RedoubleReq) String() string { return proto.CompactTextString(m) }
func (*RedoubleReq) ProtoMessage()    {}
func (*RedoubleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{17}
}
func (m *RedoubleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedoubleReq.Unmarshal(m, b)
}
func (m *RedoubleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedoubleReq.Marshal(b, m, deterministic)
}
func (dst *RedoubleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedoubleReq.Merge(dst, src)
}
func (m *RedoubleReq) XXX_Size() int {
	return xxx_messageInfo_RedoubleReq.Size(m)
}
func (m *RedoubleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RedoubleReq.DiscardUnknown(m)
}

var xxx_messageInfo_RedoubleReq proto.InternalMessageInfo

func (m *RedoubleReq) GetAddNum() int64 {
	if m != nil {
		return m.AddNum
	}
	return 0
}

// 提示请求
type TipsReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TipsReq) Reset()         { *m = TipsReq{} }
func (m *TipsReq) String() string { return proto.CompactTextString(m) }
func (*TipsReq) ProtoMessage()    {}
func (*TipsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{18}
}
func (m *TipsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TipsReq.Unmarshal(m, b)
}
func (m *TipsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TipsReq.Marshal(b, m, deterministic)
}
func (dst *TipsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TipsReq.Merge(dst, src)
}
func (m *TipsReq) XXX_Size() int {
	return xxx_messageInfo_TipsReq.Size(m)
}
func (m *TipsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TipsReq.DiscardUnknown(m)
}

var xxx_messageInfo_TipsReq proto.InternalMessageInfo

func (m *TipsReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 出牌请求
type PutCardsReq struct {
	Cards                []byte   `protobuf:"bytes,1,opt,name=Cards,proto3" json:"Cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutCardsReq) Reset()         { *m = PutCardsReq{} }
func (m *PutCardsReq) String() string { return proto.CompactTextString(m) }
func (*PutCardsReq) ProtoMessage()    {}
func (*PutCardsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{19}
}
func (m *PutCardsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutCardsReq.Unmarshal(m, b)
}
func (m *PutCardsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutCardsReq.Marshal(b, m, deterministic)
}
func (dst *PutCardsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutCardsReq.Merge(dst, src)
}
func (m *PutCardsReq) XXX_Size() int {
	return xxx_messageInfo_PutCardsReq.Size(m)
}
func (m *PutCardsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PutCardsReq.DiscardUnknown(m)
}

var xxx_messageInfo_PutCardsReq proto.InternalMessageInfo

func (m *PutCardsReq) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 取消托管请求请求
type HangUpReq struct {
	IsHangUp             bool     `protobuf:"varint,2,opt,name=IsHangUp" json:"IsHangUp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HangUpReq) Reset()         { *m = HangUpReq{} }
func (m *HangUpReq) String() string { return proto.CompactTextString(m) }
func (*HangUpReq) ProtoMessage()    {}
func (*HangUpReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{20}
}
func (m *HangUpReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HangUpReq.Unmarshal(m, b)
}
func (m *HangUpReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HangUpReq.Marshal(b, m, deterministic)
}
func (dst *HangUpReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HangUpReq.Merge(dst, src)
}
func (m *HangUpReq) XXX_Size() int {
	return xxx_messageInfo_HangUpReq.Size(m)
}
func (m *HangUpReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HangUpReq.DiscardUnknown(m)
}

var xxx_messageInfo_HangUpReq proto.InternalMessageInfo

func (m *HangUpReq) GetIsHangUp() bool {
	if m != nil {
		return m.IsHangUp
	}
	return false
}

// 要牌请求
type DemandCardsReq struct {
	Cards                []byte   `protobuf:"bytes,1,opt,name=Cards,proto3" json:"Cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DemandCardsReq) Reset()         { *m = DemandCardsReq{} }
func (m *DemandCardsReq) String() string { return proto.CompactTextString(m) }
func (*DemandCardsReq) ProtoMessage()    {}
func (*DemandCardsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{21}
}
func (m *DemandCardsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DemandCardsReq.Unmarshal(m, b)
}
func (m *DemandCardsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DemandCardsReq.Marshal(b, m, deterministic)
}
func (dst *DemandCardsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DemandCardsReq.Merge(dst, src)
}
func (m *DemandCardsReq) XXX_Size() int {
	return xxx_messageInfo_DemandCardsReq.Size(m)
}
func (m *DemandCardsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DemandCardsReq.DiscardUnknown(m)
}

var xxx_messageInfo_DemandCardsReq proto.InternalMessageInfo

func (m *DemandCardsReq) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 清桌请求
type CleanReq struct {
	IsClean              bool     `protobuf:"varint,1,opt,name=isClean" json:"isClean,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanReq) Reset()         { *m = CleanReq{} }
func (m *CleanReq) String() string { return proto.CompactTextString(m) }
func (*CleanReq) ProtoMessage()    {}
func (*CleanReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dou_dizhu_81195e2db5592532, []int{22}
}
func (m *CleanReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanReq.Unmarshal(m, b)
}
func (m *CleanReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanReq.Marshal(b, m, deterministic)
}
func (dst *CleanReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanReq.Merge(dst, src)
}
func (m *CleanReq) XXX_Size() int {
	return xxx_messageInfo_CleanReq.Size(m)
}
func (m *CleanReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanReq.DiscardUnknown(m)
}

var xxx_messageInfo_CleanReq proto.InternalMessageInfo

func (m *CleanReq) GetIsClean() bool {
	if m != nil {
		return m.IsClean
	}
	return false
}

func init() {
	proto.RegisterType((*StatusMessageRes)(nil), "msg.StatusMessageRes")
	proto.RegisterType((*DealRes)(nil), "msg.DealRes")
	proto.RegisterType((*CurrentRobberRes)(nil), "msg.CurrentRobberRes")
	proto.RegisterType((*RobResultRes)(nil), "msg.RobResultRes")
	proto.RegisterType((*ConfirmDizhuRes)(nil), "msg.ConfirmDizhuRes")
	proto.RegisterType((*RedoubleResultRes)(nil), "msg.RedoubleResultRes")
	proto.RegisterType((*CurrentPlayerRes)(nil), "msg.CurrentPlayerRes")
	proto.RegisterType((*TipsRes)(nil), "msg.TipsRes")
	proto.RegisterType((*HangUpInfoRes)(nil), "msg.HangUpInfoRes")
	proto.RegisterType((*PutInfoRes)(nil), "msg.PutInfoRes")
	proto.RegisterType((*PlayerInfo)(nil), "msg.PlayerInfo")
	proto.RegisterType((*SettleInfoRes)(nil), "msg.SettleInfoRes")
	proto.RegisterType((*SettleResult)(nil), "msg.SettleResult")
	proto.RegisterType((*SceneMessageRes)(nil), "msg.SceneMessageRes")
	proto.RegisterType((*SeatUserInfoRes)(nil), "msg.SeatUserInfoRes")
	proto.RegisterType((*LeftCards)(nil), "msg.LeftCards")
	proto.RegisterType((*RobReq)(nil), "msg.RobReq")
	proto.RegisterType((*RedoubleReq)(nil), "msg.RedoubleReq")
	proto.RegisterType((*TipsReq)(nil), "msg.TipsReq")
	proto.RegisterType((*PutCardsReq)(nil), "msg.PutCardsReq")
	proto.RegisterType((*HangUpReq)(nil), "msg.HangUpReq")
	proto.RegisterType((*DemandCardsReq)(nil), "msg.DemandCardsReq")
	proto.RegisterType((*CleanReq)(nil), "msg.CleanReq")
	proto.RegisterEnum("msg.ReceiveMessageType", ReceiveMessageType_name, ReceiveMessageType_value)
	proto.RegisterEnum("msg.SendToClientMessageType", SendToClientMessageType_name, SendToClientMessageType_value)
	proto.RegisterEnum("msg.UserStatus", UserStatus_name, UserStatus_value)
	proto.RegisterEnum("msg.ErrList", ErrList_name, ErrList_value)
	proto.RegisterEnum("msg.GameStatus", GameStatus_name, GameStatus_value)
	proto.RegisterEnum("msg.CardsType", CardsType_name, CardsType_value)
	proto.RegisterEnum("msg.UserActionType", UserActionType_name, UserActionType_value)
}

func init() { proto.RegisterFile("dou_dizhu.proto", fileDescriptor_dou_dizhu_81195e2db5592532) }

var fileDescriptor_dou_dizhu_81195e2db5592532 = []byte{
	// 1544 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x5f, 0x6f, 0xdc, 0xc4,
	0x16, 0xaf, 0xd7, 0xfb, 0xf7, 0xec, 0xbf, 0xc9, 0xdc, 0x34, 0x77, 0xef, 0xd5, 0x55, 0x6f, 0xae,
	0x6f, 0x29, 0xd5, 0x0a, 0x55, 0xb0, 0x7d, 0x44, 0x02, 0x12, 0x27, 0x6a, 0x17, 0xa5, 0x49, 0xb0,
	0xb7, 0x94, 0x97, 0x0a, 0x79, 0x77, 0x27, 0xa9, 0x55, 0xdb, 0x93, 0xd8, 0xe3, 0x42, 0x90, 0x78,
	0x83, 0x07, 0xc4, 0x0b, 0xe2, 0x33, 0xf0, 0xce, 0x07, 0xe2, 0x9b, 0xf0, 0x80, 0xd0, 0x99, 0x19,
	0xdb, 0xe3, 0x0d, 0x15, 0x6a, 0x10, 0x6f, 0x3e, 0xbf, 0x39, 0x73, 0xe6, 0x9c, 0xdf, 0x9c, 0x39,
	0xe7, 0xec, 0xc2, 0x78, 0xcd, 0xf3, 0xcf, 0xd7, 0xe1, 0x57, 0x2f, 0xf2, 0x07, 0x17, 0x29, 0x17,
	0x9c, 0xda, 0x71, 0x76, 0xee, 0x7c, 0x0c, 0xc4, 0x17, 0x81, 0xc8, 0xb3, 0x27, 0x2c, 0xcb, 0x82,
	0x73, 0xe6, 0xb1, 0x8c, 0xee, 0x40, 0x5b, 0x61, 0x13, 0x6b, 0xd7, 0xba, 0xdf, 0xf2, 0xb4, 0x44,
	0xef, 0x00, 0xa8, 0xaf, 0x45, 0x18, 0xb3, 0x49, 0x43, 0xae, 0x19, 0x88, 0xf3, 0x5f, 0xe8, 0x1c,
	0xb0, 0x20, 0x42, 0x13, 0xdb, 0xd0, 0x72, 0x83, 0x74, 0xad, 0x2c, 0x0c, 0x3c, 0x25, 0x38, 0xdf,
	0x58, 0x40, 0xdc, 0x3c, 0x4d, 0x59, 0x22, 0x3c, 0xbe, 0x5c, 0xb2, 0x54, 0x9f, 0xf6, 0x34, 0x63,
	0xe9, 0x7c, 0x2d, 0x75, 0x6d, 0x4f, 0x4b, 0x74, 0x02, 0x1d, 0xf7, 0x45, 0x10, 0xe2, 0x82, 0x3a,
	0xaa, 0x10, 0xd1, 0x8f, 0xbd, 0x95, 0x08, 0x79, 0x22, 0xfd, 0xb0, 0x95, 0x1f, 0x15, 0x82, 0xeb,
	0xfa, 0x94, 0xe3, 0x3c, 0x9e, 0x34, 0xa5, 0x55, 0x03, 0x71, 0x3e, 0x83, 0x81, 0xc7, 0x97, 0x1e,
	0xcb, 0xf2, 0x48, 0xdc, 0xcc, 0x83, 0x1d, 0x68, 0x7b, 0x7c, 0x89, 0xd6, 0x6d, 0xb5, 0x43, 0x49,
	0xce, 0xd7, 0x30, 0x76, 0x79, 0x72, 0x16, 0xa6, 0xf1, 0x01, 0x12, 0x7d, 0x33, 0xe3, 0xbb, 0xd0,
	0xdf, 0xe7, 0x42, 0xf0, 0x58, 0x31, 0x68, 0x4b, 0x06, 0x4d, 0xc8, 0x38, 0xbe, 0x59, 0x3b, 0xfe,
	0x39, 0x6c, 0x79, 0x6c, 0xcd, 0xf3, 0x65, 0xc4, 0xfe, 0x62, 0x74, 0x7b, 0xeb, 0xb5, 0x11, 0x9d,
	0x92, 0x9c, 0x9f, 0xaa, 0xeb, 0x3b, 0x8d, 0x82, 0xab, 0xbf, 0xf1, 0xfa, 0x4e, 0x59, 0x1a, 0x87,
	0x59, 0x16, 0xf2, 0x44, 0x46, 0xd8, 0xf5, 0x0c, 0xc4, 0xd8, 0x7f, 0x75, 0xc1, 0x26, 0xad, 0xda,
	0xfe, 0xab, 0x0b, 0x99, 0x86, 0x8b, 0xf0, 0x22, 0xdb, 0x48, 0x43, 0xbb, 0x4a, 0xc3, 0xe7, 0x30,
	0x7c, 0x1c, 0x24, 0xe7, 0x4f, 0x2f, 0xe6, 0xc9, 0x19, 0xbf, 0x59, 0x0c, 0xff, 0x86, 0xee, 0x3c,
	0x53, 0x46, 0x64, 0x04, 0x5d, 0xaf, 0x94, 0x9d, 0x5f, 0x2c, 0x80, 0xd3, 0x5c, 0x18, 0xc6, 0x0f,
	0xd3, 0x14, 0xd9, 0xd4, 0xaf, 0x49, 0x49, 0xf4, 0x3f, 0xd0, 0x9b, 0x67, 0x7e, 0xbe, 0x5a, 0xb1,
	0x2c, 0x93, 0xe6, 0xbb, 0x5e, 0x05, 0x18, 0x2e, 0xd9, 0xaf, 0x73, 0xa9, 0x59, 0x77, 0xa9, 0x8c,
	0xb5, 0x65, 0x3c, 0x39, 0x74, 0x14, 0x3f, 0x24, 0x55, 0x6d, 0xb9, 0xa1, 0x94, 0xe9, 0x43, 0x18,
	0xec, 0x73, 0x1e, 0x2f, 0xb8, 0xba, 0xcd, 0x49, 0x67, 0xd7, 0xba, 0xdf, 0x9f, 0x8d, 0x1f, 0xc4,
	0xd9, 0xf9, 0x03, 0x05, 0xc9, 0x18, 0x6a, 0x4a, 0xce, 0x07, 0x00, 0xd5, 0xda, 0x9b, 0x33, 0xe7,
	0xfc, 0xda, 0x80, 0xa1, 0xcf, 0x84, 0x88, 0x58, 0x41, 0xd0, 0x2e, 0xf4, 0x3d, 0xbe, 0x7c, 0x92,
	0x47, 0x22, 0xbc, 0x88, 0x98, 0x36, 0x64, 0x42, 0xf4, 0x1e, 0x8c, 0xf6, 0xa2, 0xe8, 0xe4, 0xec,
	0xac, 0x54, 0x6a, 0x48, 0xa5, 0x0d, 0x94, 0x4e, 0x81, 0xec, 0xb3, 0x0d, 0x4d, 0x45, 0xdf, 0x35,
	0x1c, 0x6d, 0xaa, 0x27, 0x55, 0x6a, 0xaa, 0xb7, 0xb4, 0x81, 0x52, 0x47, 0x91, 0x54, 0x6a, 0xb5,
	0xa4, 0x56, 0x0d, 0x43, 0x5b, 0x1e, 0x5f, 0xbd, 0x64, 0xa2, 0xd4, 0x6a, 0x2b, 0x5b, 0x75, 0x14,
	0xf5, 0x5c, 0x1e, 0xc7, 0x3c, 0x29, 0xf5, 0x3a, 0x4a, 0xaf, 0x8e, 0xd2, 0xbb, 0x30, 0x94, 0xf5,
	0xa3, 0x54, 0xeb, 0x4a, 0xb5, 0x3a, 0x48, 0xdf, 0x03, 0x50, 0xaf, 0xfc, 0x28, 0xcc, 0xc4, 0xa4,
	0xb7, 0x6b, 0xdf, 0xef, 0xcf, 0xb6, 0xe4, 0xe5, 0x29, 0x7e, 0x75, 0x09, 0x30, 0x94, 0x9c, 0xdf,
	0x2c, 0x18, 0x98, 0x8b, 0x37, 0xc8, 0xfc, 0x09, 0x74, 0xe6, 0x99, 0x74, 0x44, 0x27, 0x7e, 0x21,
	0xca, 0xaa, 0x24, 0xad, 0x96, 0x55, 0x49, 0x9d, 0x31, 0x05, 0x72, 0xca, 0x82, 0x2c, 0x48, 0x44,
	0xb6, 0xc1, 0xe2, 0x35, 0x1c, 0x23, 0x5f, 0x70, 0x11, 0x44, 0x1b, 0x44, 0xd6, 0x41, 0x7c, 0x3a,
	0x47, 0xec, 0x4c, 0xa8, 0x74, 0xef, 0xc8, 0x74, 0xaf, 0x00, 0x4c, 0x79, 0x8c, 0xe2, 0x38, 0x88,
	0x15, 0x71, 0x3d, 0xaf, 0x94, 0x9d, 0xef, 0x9a, 0x30, 0xf6, 0x57, 0x2c, 0x61, 0x46, 0xbb, 0xbb,
	0x03, 0xf0, 0x28, 0x88, 0x59, 0xad, 0xe5, 0x19, 0x08, 0xde, 0x5a, 0xd5, 0xe4, 0xf0, 0x98, 0x22,
	0xfb, 0xea, 0x28, 0x9e, 0xeb, 0x71, 0x1e, 0xbb, 0x3c, 0x13, 0x3a, 0xeb, 0x4a, 0x19, 0xd7, 0x9e,
	0x84, 0xc9, 0x51, 0x18, 0x87, 0x05, 0x3b, 0xa5, 0x8c, 0xd1, 0x78, 0x6c, 0xc5, 0x93, 0x84, 0xad,
	0x84, 0x24, 0xa6, 0xeb, 0x55, 0x80, 0xaa, 0xf5, 0x3c, 0x9e, 0x1f, 0x68, 0x2a, 0xb4, 0x24, 0x77,
	0x71, 0x1e, 0x1f, 0xb1, 0x57, 0x2c, 0x92, 0x1c, 0xb4, 0xbc, 0x0a, 0xd8, 0xec, 0x21, 0xdd, 0xeb,
	0x3d, 0xe4, 0x7a, 0x2e, 0xf6, 0xfe, 0x30, 0x17, 0xdf, 0x87, 0x61, 0xad, 0x65, 0x4f, 0x40, 0x56,
	0x89, 0xdb, 0x32, 0xd1, 0x36, 0x9b, 0xb9, 0x57, 0xd7, 0x35, 0x36, 0xeb, 0x12, 0xd3, 0xbf, 0xbe,
	0xb9, 0x6c, 0x25, 0x5e, 0x5d, 0x97, 0xbe, 0xab, 0xee, 0xf1, 0x20, 0x10, 0xc1, 0x64, 0x20, 0xb3,
	0x7b, 0x5b, 0x67, 0x77, 0x20, 0x64, 0x9a, 0xaa, 0xfa, 0xe1, 0x95, 0x5a, 0xf4, 0x1d, 0x33, 0x2f,
	0x86, 0x72, 0xcb, 0x48, 0x6e, 0x29, 0x51, 0x23, 0x4f, 0x9c, 0x6f, 0x6d, 0x18, 0x6f, 0xd8, 0xaa,
	0xe5, 0x8e, 0x55, 0xcf, 0x1d, 0x4a, 0xa1, 0xf9, 0x98, 0x05, 0xea, 0x41, 0xf4, 0x3c, 0xf9, 0x8d,
	0x98, 0xcb, 0xc3, 0x44, 0xdf, 0xb7, 0xfc, 0x7e, 0xe3, 0x12, 0x5d, 0x8d, 0x5b, 0xed, 0xda, 0xb8,
	0x55, 0xbd, 0xcd, 0xce, 0xe6, 0xdb, 0xdc, 0x5b, 0xaf, 0x53, 0x6c, 0x1b, 0x2a, 0xbd, 0x0b, 0x51,
	0xbe, 0x8b, 0x20, 0xd3, 0xf1, 0xf7, 0xf4, 0xbb, 0x28, 0x00, 0x4a, 0xc0, 0xf6, 0xd9, 0x97, 0xf2,
	0xfe, 0x5a, 0x1e, 0x7e, 0x9a, 0x6f, 0xb9, 0x7f, 0xfd, 0x2d, 0xab, 0x09, 0x63, 0x60, 0x4e, 0x18,
	0xc6, 0x68, 0x30, 0x34, 0x47, 0x83, 0xa2, 0xcd, 0x64, 0x47, 0x2c, 0x99, 0x8c, 0x54, 0x7e, 0x17,
	0x32, 0xbe, 0xaf, 0x79, 0xa6, 0xfa, 0x33, 0x5b, 0x4f, 0xc6, 0xaa, 0x9f, 0x57, 0x88, 0xf3, 0xa1,
	0x71, 0x6b, 0x92, 0x22, 0x9e, 0x27, 0x42, 0xbf, 0x43, 0x25, 0x60, 0x60, 0xb8, 0xfc, 0x69, 0x10,
	0xe5, 0xaa, 0xf6, 0x0f, 0xbc, 0x0a, 0x70, 0x76, 0xa5, 0xb3, 0x1e, 0xbb, 0x34, 0xdc, 0xb6, 0x6a,
	0x83, 0xd1, 0x5b, 0xd0, 0xaf, 0x06, 0xa3, 0x4b, 0x23, 0x0a, 0xab, 0x36, 0xe0, 0xfc, 0xaf, 0x98,
	0x1c, 0x2e, 0x5f, 0x57, 0x18, 0x9d, 0xff, 0x43, 0xff, 0x34, 0xd7, 0xb9, 0xc4, 0x2e, 0x5f, 0x33,
	0xe7, 0xbe, 0x0d, 0x3d, 0x35, 0x0b, 0xa0, 0x8a, 0x39, 0x2a, 0x34, 0x36, 0x46, 0x85, 0x7b, 0x30,
	0x3a, 0x60, 0x71, 0x90, 0xac, 0xff, 0xc4, 0xe0, 0x5d, 0xe8, 0xba, 0x11, 0x0b, 0x12, 0xd4, 0x98,
	0x40, 0x27, 0xcc, 0xa4, 0x24, 0x75, 0xba, 0x5e, 0x21, 0x4e, 0x7f, 0xb0, 0x80, 0x7a, 0x6c, 0xc5,
	0xc2, 0x57, 0x45, 0x79, 0x93, 0x6d, 0x7e, 0x04, 0xe0, 0xce, 0x7c, 0x5f, 0x04, 0xa9, 0x98, 0x1f,
	0x90, 0x5b, 0x14, 0xa0, 0xed, 0xce, 0x7c, 0x8f, 0x2f, 0x89, 0x45, 0xc7, 0xd0, 0xc7, 0x6f, 0xcd,
	0x0d, 0x69, 0xd0, 0x3e, 0x74, 0xdc, 0x99, 0x8f, 0x2c, 0x10, 0x5b, 0xaf, 0x16, 0xf1, 0x92, 0x26,
	0x1d, 0x42, 0xcf, 0x9d, 0xf9, 0xca, 0x79, 0xd2, 0xa2, 0x14, 0x46, 0xee, 0xcc, 0x37, 0x22, 0x20,
	0x6d, 0x3a, 0x80, 0xae, 0x3b, 0xf3, 0xa5, 0x43, 0xa4, 0x33, 0xfd, 0xbe, 0x01, 0xff, 0xf4, 0x59,
	0xb2, 0x5e, 0x70, 0x37, 0x0a, 0x59, 0x22, 0x36, 0xfc, 0xf2, 0x67, 0x6e, 0xe5, 0xd7, 0x16, 0x0c,
	0xfd, 0x99, 0x5b, 0x15, 0x5e, 0x62, 0xd1, 0x7f, 0xc0, 0x18, 0x55, 0x8c, 0x82, 0xad, 0x5c, 0xf4,
	0x67, 0x2e, 0xfe, 0xd2, 0x20, 0x36, 0xdd, 0x06, 0xe2, 0xcf, 0xdc, 0x5a, 0xd5, 0x21, 0x4d, 0x4a,
	0x60, 0xe0, 0xcf, 0xdc, 0x72, 0xc8, 0x27, 0x2d, 0x6d, 0xc9, 0x1c, 0xce, 0x49, 0x9b, 0xde, 0x86,
	0x2d, 0x54, 0xab, 0x8d, 0xcc, 0xa4, 0x53, 0xb7, 0xa9, 0x8a, 0x11, 0xe9, 0xea, 0x63, 0x25, 0x33,
	0x3d, 0xed, 0x6b, 0x35, 0x45, 0x12, 0xd0, 0xe1, 0xe8, 0xc1, 0x8f, 0xf4, 0xb5, 0x4a, 0x35, 0xea,
	0x90, 0xc1, 0xf4, 0x23, 0x00, 0x4c, 0x23, 0xfd, 0xbe, 0x29, 0x8c, 0x54, 0xe9, 0x09, 0x85, 0x0e,
	0xf8, 0x16, 0x1a, 0x91, 0xf5, 0x86, 0xa7, 0x71, 0x10, 0x11, 0xab, 0x90, 0x35, 0xe3, 0x8d, 0xe9,
	0x21, 0x74, 0x0e, 0xd3, 0x14, 0x7b, 0x39, 0xfa, 0x83, 0x5b, 0x0f, 0xd3, 0x94, 0xdc, 0x42, 0x01,
	0xfb, 0xd0, 0x49, 0x2e, 0x88, 0x85, 0xd1, 0x3f, 0x4b, 0x79, 0x72, 0x7e, 0x96, 0x47, 0x48, 0x34,
	0x69, 0xa0, 0x99, 0x63, 0x2e, 0x1e, 0xa5, 0x2c, 0x10, 0x2c, 0x25, 0xf6, 0xf4, 0x67, 0xcb, 0xec,
	0x79, 0xe8, 0x09, 0x4a, 0x35, 0x4f, 0xc6, 0xf8, 0x64, 0x82, 0xf5, 0x55, 0x79, 0x17, 0x23, 0x00,
	0xe4, 0x5c, 0xcb, 0x0d, 0xcc, 0x05, 0x8f, 0x2f, 0xb5, 0x68, 0xd3, 0x1d, 0xa0, 0x2b, 0x83, 0x5d,
	0x8d, 0x37, 0xd1, 0x76, 0x41, 0xb0, 0xc6, 0x5a, 0x48, 0x8d, 0x4e, 0x2a, 0x0d, 0xb5, 0xe5, 0x8d,
	0x49, 0xaa, 0x34, 0xd2, 0xc1, 0x44, 0x42, 0xa7, 0x4e, 0x5e, 0x21, 0xfb, 0xd3, 0x1f, 0x1b, 0xaa,
	0x04, 0x64, 0x32, 0x75, 0x00, 0xda, 0x9a, 0x22, 0x49, 0x99, 0x1f, 0x26, 0xe7, 0x11, 0xc3, 0x65,
	0x62, 0xd1, 0x2e, 0x34, 0x4f, 0x83, 0x30, 0x55, 0x89, 0xb2, 0x48, 0xb1, 0x89, 0x09, 0x62, 0xe3,
	0x5d, 0x6b, 0xe1, 0x59, 0x28, 0x5e, 0xa8, 0x1d, 0xa4, 0x89, 0x79, 0x61, 0xc0, 0x72, 0x63, 0x0b,
	0x8f, 0xf6, 0xd9, 0x65, 0xce, 0x92, 0x15, 0x23, 0x6d, 0x79, 0x00, 0x4b, 0xc3, 0x20, 0x92, 0xab,
	0x1d, 0x79, 0xb1, 0x52, 0x2e, 0x8c, 0x77, 0xe9, 0x04, 0xb6, 0x6b, 0x10, 0xda, 0x3a, 0x49, 0x18,
	0xe9, 0xd1, 0x7f, 0xc1, 0xed, 0x6b, 0x2b, 0xcf, 0xc2, 0xe4, 0x9c, 0x00, 0x32, 0xf3, 0x49, 0x1e,
	0xa4, 0x42, 0x81, 0x8b, 0x2f, 0x30, 0x69, 0x76, 0x80, 0xd6, 0x31, 0x79, 0xe6, 0x00, 0x83, 0xda,
	0xe7, 0xf1, 0x92, 0x0c, 0x31, 0x74, 0x35, 0x55, 0x92, 0xd1, 0x74, 0x4f, 0x65, 0x50, 0xf5, 0xdb,
	0x07, 0x69, 0x3c, 0xe6, 0xd5, 0x6f, 0x25, 0x95, 0x19, 0x9a, 0x6b, 0x95, 0x19, 0x8b, 0xe0, 0xa5,
	0xe4, 0x54, 0x22, 0x8d, 0x65, 0x5b, 0xfe, 0x17, 0xf0, 0xf0, 0xf7, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x41, 0x3c, 0x2b, 0x4c, 0x1e, 0x10, 0x00, 0x00,
}
